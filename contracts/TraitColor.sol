// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

/// @title TraitColor - Stores DSL Hex data for the "Color" trait
contract TraitColor {
    // The DSL Hex data is stored as a constant byte array.
    // Replace the hex literal below with the actual output from your conversion script.
    bytes private constant DSL_HEX = hex"d9001600a4011700a401c400c5001e00012061002500102072006f00740061007400650028003800390020002e00350020002e0035002900c600140000401300ff00c94f8600c6001400324013009500964e8600c600140064401300e400e01886008500cf001e00012062001800000019000000160064401700644027000e207500730065007200530070006100630065004f006e005500730065003c000e207500730065007200530070006100630065004f006e00550073006500d9002b000c206600720061006300740061006c004e006f006900730065003d0012103e0003003f00650028000a20740075007200620075006c0065006e00630065009900d9002b000c206600720061006300740061006c004e006f006900730065003d002e103e0004003f000a0128001020740075007200620075006c0065006e006300650043007200610063006b0073009900d0002b00092068007500650052006f0074006100740065002c002800280003206800750065009000d0002c00272031002000300020003000200030002000300020003000200031002000300020003000200030002000300020003000200031002000300020003000200030002000300020003000200031002000300028000b2063007200610063006b00730043006f006c006f0072009000d90029000a20740075007200620075006c0065006e00630065002a000320680075006500400008206d0075006c007400690070006c00790028000b2062006100730065005000610074007400650072006e009900d90029000b2062006100730065005000610074007400650072006e002a000b2063007200610063006b00730043006f006c006f007200400008206d0075006c007400690070006c007900280003206f00750074009900d90029001020740075007200620075006c0065006e006300650043007200610063006b0073002a000d2053006f00750072006300650047007200610070006800690063000e000a0041000120520042000120470028000f2064006900730070006c00610063006500640043007200610063006b0073009900d700d600290003206f00750074009600d60029000d2053006f0075007200630065004700720061007000680069006300960097008f008400c70016006440170064400a00012061002600012062001d00fa1087009900"; // example placeholder

    /// @notice Returns the DSL Hex data for this trait.
    /// Uses inline assembly to efficiently load the data.
    function getDSLHex() external pure returns (bytes memory data) {
        // Copy the constant into a memory variable.
        bytes memory dsl = DSL_HEX;
        assembly {
            // Get the free memory pointer
            data := mload(0x40)
            // Read the length of dsl from memory
            let len := mload(dsl)
            mstore(data, len)
            // Calculate pointer to dsl data (skip the length slot)
            let sourcePtr := add(dsl, 32)
            // Destination pointer (after the length slot in data)
            let destPtr := add(data, 32)
            // Copy dsl data into data, 32 bytes at a time.
            for { let i := 0 } lt(i, len) { i := add(i, 32) } {
                mstore(add(destPtr, i), mload(add(sourcePtr, i)))
            }
            // Update free memory pointer
            mstore(0x40, add(destPtr, len))
        }
    }
}